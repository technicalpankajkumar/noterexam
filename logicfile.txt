CREATE OR REPLACE FUNCTION find_or_create_university(p_name TEXT)
RETURNS UUID AS $$
DECLARE
  v_university_id UUID;
BEGIN
  -- Try to find the university (case-insensitive)
  SELECT id INTO v_university_id
  FROM universities
  WHERE LOWER(name) = LOWER(p_name);

  -- If not found, insert a new one
  IF v_university_id IS NULL THEN
    INSERT INTO universities(name)
    VALUES (p_name)
    RETURNING id INTO v_university_id;
  END IF;

  -- Return the university ID
  RETURN v_university_id;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION find_or_create_college(p_name TEXT, p_university_id UUID)
RETURNS UUID AS $$
DECLARE
  v_id UUID;
BEGIN
  SELECT id INTO v_id
  FROM colleges
  WHERE LOWER(name) = LOWER(p_name) AND university_id = p_university_id;

  IF NOT FOUND THEN
    INSERT INTO colleges(name, university_id)
    VALUES (p_name, p_university_id)
    RETURNING id INTO v_id;
  END IF;

  RETURN v_id;
END;
$$ LANGUAGE plpgsql;

-- //find or create coureses

CREATE OR REPLACE FUNCTION find_or_create_course(p_name TEXT, p_college_id UUID)
RETURNS UUID AS $$
DECLARE
  v_id UUID;
BEGIN
  SELECT id INTO v_id
  FROM courses
  WHERE LOWER(name) = LOWER(p_name) AND college_id = p_college_id;

  IF NOT FOUND THEN
    INSERT INTO courses(name, college_id)
    VALUES (p_name, p_college_id)
    RETURNING id INTO v_id;
  END IF;

  RETURN v_id;
END;
$$ LANGUAGE plpgsql;

-- find or create branches
CREATE OR REPLACE FUNCTION find_or_create_branch(
  p_name TEXT,
  p_year TEXT,
  p_semester TEXT,
  p_course_id UUID
)
RETURNS UUID AS $$
DECLARE
  v_id UUID;
BEGIN
  SELECT id INTO v_id
  FROM branches
  WHERE LOWER(name) = LOWER(p_name)
    AND year = p_year
    AND semester = p_semester
    AND course_id = p_course_id;

  IF NOT FOUND THEN
    INSERT INTO branches(name, year, semester, course_id)
    VALUES (p_name, p_year, p_semester, p_course_id)
    RETURNING id INTO v_id;
  END IF;

  RETURN v_id;
END;
$$ LANGUAGE plpgsql;
